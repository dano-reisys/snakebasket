200 OK
content-length: 12211
accept-ranges: bytes
vary: Accept-Encoding
server: Apache/2.2.14 (Ubuntu)
last-modified: Wed, 31 Mar 2010 21:15:13 GMT
connection: close
etag: "1c375b-2fb3-4831f3decda40"
date: Mon, 22 Oct 2012 13:07:07 GMT
content-type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    
    <title>INITools &mdash; INITools v0.3.1 documentation</title>
    <link rel="stylesheet" href="_static/default.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" />
    <script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '',
        VERSION:     '0.3.1',
        COLLAPSE_MODINDEX: false,
        FILE_SUFFIX: '.html',
        HAS_SOURCE:  true
      };
    </script>
    <script type="text/javascript" src="_static/jquery.js"></script>
    <script type="text/javascript" src="_static/doctools.js"></script>
    <link rel="top" title="INITools v0.3.1 documentation" href="" /> 
  </head>
  <body>
    <div class="related">
      <h3>Navigation</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="genindex.html" title="General Index"
             accesskey="I">index</a></li>
        <li class="right" >
          <a href="modindex.html" title="Global Module Index"
             accesskey="M">modules</a> |</li>
        <li><a href="">INITools v0.3.1 documentation</a> &raquo;</li> 
      </ul>
    </div>  

    <div class="document">
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body">
            
  <div class="section" id="initools">
<h1><a class="toc-backref" href="#id3">INITools</a><a class="headerlink" href="#initools" title="Permalink to this headline">¶</a></h1>
<div class="contents topic" id="contents">
<p class="topic-title first">Contents</p>
<ul class="simple">
<li><a class="reference internal" href="#initools" id="id3">INITools</a></li>
<li><a class="reference internal" href="#intro-status" id="id4">Intro &amp; Status</a></li>
<li><a class="reference internal" href="#overview" id="id5">Overview</a></li>
<li><a class="reference internal" href="#future" id="id6">Future</a></li>
<li><a class="reference internal" href="#other-options" id="id7">Other Options</a></li>
<li><a class="reference internal" href="#news" id="id8">News</a><ul>
<li><a class="reference internal" href="#id1" id="id9">0.3.1</a></li>
<li><a class="reference internal" href="#id2" id="id10">0.3</a></li>
</ul>
</li>
</ul>
</div>
</div>
<div class="section" id="intro-status">
<h1><a class="toc-backref" href="#id4">Intro &amp; Status</a><a class="headerlink" href="#intro-status" title="Permalink to this headline">¶</a></h1>
<p>INITools is a variety of modules for manipulating <tt class="docutils literal"><span class="pre">.ini</span></tt>-style
files.  This is similar to <a class="reference external" href="http://python.org/doc/current/lib/module-ConfigParser.html">ConfigParser</a>, only
easier to build on than that library.</p>
<p>I&#8217;m not (very) actively developing this library, though I do use it
from time to time.  Anyone interested in doing something with it
should feel free to take it in whatever direction they find
interesting.  You can contact me at <a class="reference external" href="mailto:ianb&#37;&#52;&#48;colorstudy&#46;com">ianb<span>&#64;</span>colorstudy<span>&#46;</span>com</a></p>
</div>
<div class="section" id="overview">
<h1><a class="toc-backref" href="#id5">Overview</a><a class="headerlink" href="#overview" title="Permalink to this headline">¶</a></h1>
<p>A whirlwind tour of the modules:</p>
<dl class="docutils">
<dt><tt class="docutils literal"><span class="pre">iniparser</span></tt>:</dt>
<dd>The most basic module, this is a simple parser for <tt class="docutils literal"><span class="pre">.ini</span></tt>-style
files.  You subclass the parser and build your objects as the file
is parsed.  See <tt class="docutils literal"><span class="pre">initools.iniparser.BasicParser</span></tt> for a minimal
example.</dd>
<dt><tt class="docutils literal"><span class="pre">configparser</span></tt>:</dt>
<dd>A module compatible with the <a class="reference external" href="http://python.org/doc/current/lib/module-ConfigParser.html">standard library</a>
<tt class="docutils literal"><span class="pre">ConfigParser</span></tt> module &#8211; it doesn&#8217;t actually share any code with
that module, but supports all the same thing plus some other
(optional but disabled) features.</dd>
<dt><tt class="docutils literal"><span class="pre">configwrapper</span></tt>:</dt>
<dd>This offers a simple <tt class="docutils literal"><span class="pre">Config</span></tt> object that takes a single
filename as an argument, and provides a simple interface to that
file.  The closest thing here to <tt class="docutils literal"><span class="pre">ConfigParser</span></tt>, I guess.</dd>
<dt><tt class="docutils literal"><span class="pre">lazyiniparser</span></tt>:</dt>
<dd>An ini parser that keeps complete track of the files it draws
from, including order, filename/line number, and comments.  It can
be used for systems that support round-tripping (reading and
writing files).</dd>
<dt><tt class="docutils literal"><span class="pre">inischema</span></tt>:</dt>
<dd>A thought experiment, mostly.  Supports a class-based schema
definition, and reads files matching them against the definition.
Not terribly advanced.  It would be more interesting if it used
<a class="reference external" href="http://formencode.org">FormEncode</a> for schemas, or maybe
something based on (or similar to) <a class="reference external" href="http://python.org/doc/current/lib/module-optparse.html">optparse</a>.  A
config-file compliment to <tt class="docutils literal"><span class="pre">optparse</span></tt> would be generally useful,
but probably would be based more on <tt class="docutils literal"><span class="pre">iniparser</span></tt> or
<tt class="docutils literal"><span class="pre">lazyiniparser</span></tt>.</dd>
<dt><tt class="docutils literal"><span class="pre">nested</span></tt>:</dt>
<dd>A nested dictionary-like object.  Lets you fold several
dictionaries into a single view, including nested dictionaries.</dd>
<dt><tt class="docutils literal"><span class="pre">lazyloader</span></tt>:</dt>
<dd><p class="first">The fanciest and most complicated of the modules.  This is where
it seemed to get out of control (especially combined as it is with
<tt class="docutils literal"><span class="pre">nested</span></tt>).  This supports loading several files, doing
conversion with source tracking, parsing the keys and sections to
create highly nested structures, and folding a configuration back
onto itself (for context-sensitive configuration).</p>
<p class="last">This is complex enough that it becomes necessary to debug your
configuration files, which sucks.</p>
</dd>
</dl>
</div>
<div class="section" id="future">
<h1><a class="toc-backref" href="#id6">Future</a><a class="headerlink" href="#future" title="Permalink to this headline">¶</a></h1>
<p>I don&#8217;t have any particular plans, but if you do that&#8217;s cool.  The
<tt class="docutils literal"><span class="pre">optparse</span></tt> thing would be cool.</p>
</div>
<div class="section" id="other-options">
<h1><a class="toc-backref" href="#id7">Other Options</a><a class="headerlink" href="#other-options" title="Permalink to this headline">¶</a></h1>
<p>See <a class="reference external" href="http://wiki.python.org/moin/ConfigParserShootout">http://wiki.python.org/moin/ConfigParserShootout</a></p>
</div>
<div class="section" id="news">
<h1><a class="toc-backref" href="#id8">News</a><a class="headerlink" href="#news" title="Permalink to this headline">¶</a></h1>
<div class="section" id="id1">
<h2><a class="toc-backref" href="#id9">0.3.1</a><a class="headerlink" href="#id1" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li>Fix to allow subclasses to implement <tt class="docutils literal"><span class="pre">error_missing_equal</span></tt> to not throw
an error (i.e. ignore this error)</li>
<li>The <tt class="docutils literal"><span class="pre">.write()</span></tt> method (which writes out an edited config file) was
not giving</li>
</ul>
</div>
<div class="section" id="id2">
<h2><a class="toc-backref" href="#id10">0.3</a><a class="headerlink" href="#id2" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li>Added <tt class="docutils literal"><span class="pre">ignore_missing_files</span></tt> configuration value on ConfigParser;
if False (default True) then <tt class="docutils literal"><span class="pre">conf.read([filename])</span></tt> will raise an
exception if the filename doesn&#8217;t exist.</li>
<li>Added an <tt class="docutils literal"><span class="pre">_open</span></tt> method on ConfigParser that can be overridden to,
for example, support HTTP urls.</li>
<li>Added <tt class="docutils literal"><span class="pre">initools.configparser.ConfigParser.write_sources(fileobj,</span>
<span class="pre">sources)</span></tt>, which writes all the settings in one of the sources in
the set <tt class="docutils literal"><span class="pre">sources</span></tt>.  Also
<tt class="docutils literal"><span class="pre">initools.ConfigParser.CanonicalFilenameSet</span></tt> which is a set-like
object that accepts relative and absolute (or case-different files
on Windows) as the same.</li>
<li>Added method <tt class="docutils literal"><span class="pre">initools.configparser.ConfigParser.setting_location(section,</span> <span class="pre">option)</span></tt>
which returns the (filename, line_number) of the setting (or None, None).</li>
<li>Fixed a problem when writing files using inline comments, with
<tt class="docutils literal"><span class="pre">initools.configparser.ConfigParser</span></tt> &#8211; after parsing the wrong
value would be put in as a comment, creating an invalid configuration file.</li>
</ul>
</div>
</div>


          </div>
        </div>
      </div>
      <div class="sphinxsidebar">
        <div class="sphinxsidebarwrapper">
            <h3><a href="">Table Of Contents</a></h3>
            <ul>
<li><a class="reference external" href="">INITools</a></li>
<li><a class="reference external" href="#intro-status">Intro &amp; Status</a></li>
<li><a class="reference external" href="#overview">Overview</a></li>
<li><a class="reference external" href="#future">Future</a></li>
<li><a class="reference external" href="#other-options">Other Options</a></li>
<li><a class="reference external" href="#news">News</a><ul>
<li><a class="reference external" href="#id1">0.3.1</a></li>
<li><a class="reference external" href="#id2">0.3</a></li>
</ul>
</li>
</ul>

            <h3>This Page</h3>
            <ul class="this-page-menu">
              <li><a href="_sources/index.txt"
                     rel="nofollow">Show Source</a></li>
            </ul>
          <div id="searchbox" style="display: none">
            <h3>Quick search</h3>
              <form class="search" action="search.html" method="get">
                <input type="text" name="q" size="18" />
                <input type="submit" value="Go" />
                <input type="hidden" name="check_keywords" value="yes" />
                <input type="hidden" name="area" value="default" />
              </form>
              <p class="searchtip" style="font-size: 90%">
              Enter search terms or a module, class or function name.
              </p>
          </div>
          <script type="text/javascript">$('#searchbox').show(0);</script>
        </div>
      </div>
      <div class="clearer"></div>
    </div>
    <div class="related">
      <h3>Navigation</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="genindex.html" title="General Index"
             >index</a></li>
        <li class="right" >
          <a href="modindex.html" title="Global Module Index"
             >modules</a> |</li>
        <li><a href="">INITools v0.3.1 documentation</a> &raquo;</li> 
      </ul>
    </div>
    <div class="footer">
      &copy; Copyright 2008, Ian Bicking.
      Last updated on Mar 31, 2010.
      Created using <a href="http://sphinx.pocoo.org/">Sphinx</a> 0.6.3.
    </div>
  </body>
</html>